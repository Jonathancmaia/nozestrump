{"version":3,"file":"static/js/258.051145f1.chunk.js","mappings":"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","sources":["view/cart/endereco/index.js","view/cart/index.js","view/encomendas/ConsultaEncomenda.js","view/encomendas/index.js","view/header/index.js","view/showPhotos/index.js"],"sourcesContent":["import React,{ useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Container, Row, Col } from 'react-bootstrap';\r\nimport { HttpAuth } from '../../../config/Http';\r\nimport Axios from 'axios';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { index } from '../../../store/actions/me.action';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeNotify } from '../../../store/actions/notify.action';\r\n\r\nexport default function Endereco(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const me = useSelector (state => state.Me);\r\n\r\n  //Mecanismo de abertura e fechamento do modal\r\n  const [open, setOpen] = useState(false);\r\n\r\n  //Mecanismo para testar sucesso na função de CEP\r\n  const [consultaCepIsSucceful, setConsultaCepIsSucceful] = useState(''); \r\n\r\n  //Constantes para endereço\r\n  const [qtdEndereco, setQtdEndereco] = useState(1);\r\n  const [endereco, setEndereco] = useState({\r\n    rua: '',\r\n    numero: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    cep: '',\r\n    cidade: '',\r\n    estado: '',\r\n    referencia: ''\r\n  });\r\n\r\n  //valores dos inputs\r\n  const [rua, setRua] = useState('');\r\n  const [numero, setNumero] = useState('');\r\n  const [complemento, setComplemento] = useState('');\r\n  const [bairro, setBairro] = useState('');\r\n  const [cep, setCep] = useState('');\r\n  const [cidade, setCidade] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [referencia, setReferencia] = useState('');\r\n  const [sn, setSn] = useState(false);\r\n  const [disableButton, setDisableButton] = useState(false);\r\n\r\n  const [cepLoading, setCepLoading] = useState(true);\r\n  const [cepIsValid, setCepIsValid] = useState(undefined);\r\n  const [cepIsInvalid, setCepIsInvalid] = useState(undefined);\r\n  const [enderecoSetadoByCep, setEnderecoSetadoByCep] = useState({\r\n    rua: undefined,\r\n    bairro: undefined,\r\n    cidade: undefined,\r\n    estado: undefined\r\n  });\r\n\r\n  let ruaChecked = undefined;\r\n  let bairroChecked = undefined;\r\n  let cidadeChecked = undefined;\r\n  let estadoChecked = undefined;\r\n\r\n  const [pac, setPac] = useState(0);\r\n  const [sedex, setSedex] = useState(0);\r\n  const [tipoEnvio, setTipoEnvio] = useState('pac');\r\n  const [freteLoading, setFreteLoading] = useState(true);\r\n\r\n  const setClickSn = (e)=>{\r\n    if (sn === false){\r\n      setSn(true);\r\n    } else {\r\n      setSn(false);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setRua(endereco.rua);\r\n    setNumero(endereco.numero);\r\n    setComplemento(endereco.complemento);\r\n    setBairro(endereco.bairro);\r\n    setCep(endereco.cep);\r\n    setCidade(endereco.cidade);\r\n    setEstado(endereco.estado);\r\n    setReferencia(endereco.referencia);\r\n  },[endereco]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (sn === true) {\r\n      setNumero('');\r\n    }\r\n  },[sn])\r\n\r\n  useEffect(()=>{\r\n    if (props.open){\r\n      setOpen(true);\r\n      buscaEndereco();\r\n    }\r\n  },[props.open]);\r\n\r\n  //Função de consulta o cep\r\n  function consultaCep(){\r\n    HttpAuth.post('frete', {\r\n      cep: cep\r\n    }).then(\r\n      (response) => {\r\n        \r\n        if (response === undefined || response === '' || response === [] || response.data[0].price === 0 || response.data[1].price === 0){\r\n\r\n          if (consultaCepIsSucceful === ''){\r\n            setConsultaCepIsSucceful(true);\r\n          } else {\r\n            setConsultaCepIsSucceful(!consultaCepIsSucceful);\r\n          }\r\n          \r\n\r\n        } else {\r\n\r\n          setSedex(response.data[0]);\r\n          setPac(response.data[1]);\r\n          setFreteLoading(false);\r\n          setConsultaCepIsSucceful('');\r\n\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  //Sempre que a função de cnsulta cep for má sucedida, será executada novamente\r\n  useEffect(()=>{\r\n    if (consultaCepIsSucceful !== ''){\r\n      consultaCep();\r\n    }\r\n  },[consultaCepIsSucceful]);\r\n\r\n  useEffect(()=>{\r\n    setCepIsValid(undefined);\r\n    setCepIsInvalid(undefined);\r\n\r\n    if (cep !== undefined){\r\n      if (cep.length === 8){\r\n\r\n        //consulta local do cep\r\n\r\n        setCepLoading(true);\r\n        \r\n        const linkCep = 'https://viacep.com.br/ws/'+cep+'/json/unicode/';\r\n\r\n        Axios.get(linkCep).then(response => {\r\n          if(response.data.cep === undefined){\r\n            setCepIsInvalid(true);\r\n          } else {\r\n\r\n            //consulta o frete\r\n\r\n            setFreteLoading(true);\r\n\r\n            consultaCep();\r\n\r\n            setCepIsValid(true);\r\n            setEndereco({\r\n              rua: response.data.logradouro,\r\n              numero: numero,\r\n              complemento: complemento,\r\n              bairro: response.data.bairro,\r\n              cep: cep,\r\n              cidade: response.data.localidade,\r\n              estado: response.data.uf,\r\n              referencia: referencia\r\n            })\r\n            \r\n            if (response.data.logradouro !== undefined || response.data.logradouro !== ''){\r\n              ruaChecked = true;\r\n            } else {\r\n              ruaChecked = false;\r\n            }\r\n\r\n            if (response.data.bairro !== undefined || response.data.bairro !== ''){\r\n              bairroChecked = true;\r\n            } else {\r\n              bairroChecked = false;\r\n            }\r\n\r\n            if (response.data.localidade !== undefined || response.data.localidade !== ''){\r\n              cidadeChecked = true;\r\n            } else {\r\n              cidadeChecked = false;\r\n            }\r\n\r\n            if (response.data.uf !== undefined || response.data.uf !== ''){\r\n              estadoChecked = true;\r\n            } else {\r\n              estadoChecked = false;\r\n            }\r\n\r\n            setEnderecoSetadoByCep({\r\n              rua: ruaChecked,\r\n              bairro: bairroChecked,\r\n              cidade: cidadeChecked,\r\n              estado: estadoChecked\r\n            });\r\n\r\n          }\r\n\r\n          setCepLoading(false);\r\n        })\r\n        \r\n      }\r\n    }\r\n\r\n    \r\n  },[cep])\r\n\r\n  function buscaEndereco (){\r\n    HttpAuth.get('cliente/'+props.id+'/endereco').then(\r\n      (response) => {\r\n        \r\n        if (typeof response.data.numero !== 'undefined') {\r\n\r\n          setQtdEndereco(response.data.length);\r\n\r\n          setEndereco({\r\n            rua: rua,\r\n            numero: response.data[qtdEndereco-1].numero,\r\n            complemento: response.data[qtdEndereco-1].complemento,\r\n            bairro: bairro,\r\n            cep: response.data[qtdEndereco-1].cep,\r\n            cidade: cidade,\r\n            estado: estado,\r\n            referencia: response.data[qtdEndereco-1].referencia\r\n          });\r\n        } else {\r\n          setCepLoading(false);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  //Payment call (pagseguro)\r\n  function payment(){\r\n\r\n    setFreteLoading(true);\r\n\r\n    let cart = localStorage.getItem('storeCart');\r\n\r\n    if ((typeof cart !== 'undefined' || cart !== '' || cart !== [])){\r\n        \r\n      let itemsIdQtd = [];\r\n\r\n      //LOGICA DE ADICINAR OS IDS DO CARRINHO\r\n      for (let i = 0; i < JSON.parse(cart).length; i++){\r\n    \r\n        itemsIdQtd = [...itemsIdQtd, {\r\n          itemId: JSON.parse(cart)[i].id,\r\n          itemQuantity: JSON.parse(cart)[i].qtd,\r\n          itemTam: JSON.parse(cart)[i].tamanho\r\n        }];\r\n      }\r\n\r\n      let endereco = {\r\n        rua: rua,\r\n        numero: numero,\r\n        complemento: complemento,\r\n        bairro: bairro,\r\n        cep: cep,\r\n        cidade: cidade,\r\n        estado: estado,\r\n        referencia: referencia,\r\n        tipo: tipoEnvio\r\n      };\r\n        \r\n      localStorage.removeItem('storeCart');\r\n\r\n      const pedido = {\r\n        items: JSON.stringify(itemsIdQtd),\r\n        endereco: JSON.stringify(endereco)\r\n      };\r\n\r\n      HttpAuth.post('checkout', pedido).then(\r\n        (response) => {\r\n          window.location = response.data;\r\n        }\r\n      );\r\n\r\n    } else {\r\n\r\n      dispatch( changeNotify({\r\n        open: true,\r\n        class: 'error',\r\n        msg: 'Seu carrinho está vazio.'\r\n      }));\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    <Modal show={open} onHide={handleClose} size='xl'>\r\n        <Modal.Header closeButton>\r\n          <h2>\r\n            Endereço de entrega\r\n          </h2>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <Form>\r\n                  <Form.Group controlId=\"endereco\">\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <Form.Label>Cep</Form.Label>\r\n                        <Form.Control \r\n                        size='sm'\r\n                        type=\"text\"\r\n                        placeholder=\"12345123\" \r\n                        value={cep}\r\n                        onChange={text => setCep(text.target.value)}\r\n                        disabled={cepLoading && true}\r\n                        isValid={cepIsValid}\r\n                        isInvalid={cepIsInvalid}\r\n                        />\r\n                        {\r\n                          cepLoading ? \r\n                            <CircularProgress/>\r\n                              :\r\n                            <Form.Text className=\"text-muted\">\r\n                              Caso não saiba seu cep: \r\n                              <a\r\n                                href='https://buscacepinter.correios.com.br/app/endereco/index.php'\r\n                              >\r\n                                Pesquise seu cep\r\n                              </a>\r\n                            </Form.Text>\r\n                        }\r\n                        \r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <Form.Label>Rua</Form.Label>\r\n                        <Form.Control\r\n                          size='sm'\r\n                          type=\"text\"\r\n                          placeholder=\"Rua ciclano da silva\"\r\n                          value={rua}\r\n                          onChange={text => setRua(text.target.value)}\r\n                          disabled={enderecoSetadoByCep.rua}\r\n                        />\r\n                        <Form.Label>Número</Form.Label>\r\n                        <Form.Control\r\n                          size='sm'\r\n                          type=\"number\"\r\n                          placeholder=\"10\"\r\n                          value={numero}\r\n                          onChange={text => setNumero(text.target.value)}\r\n                          disabled={sn}\r\n                          \r\n                        />\r\n                        <Form.Check \r\n                          type=\"switch\"\r\n                          id=\"isSemNumero\"\r\n                          label=\"s/n\"\r\n                          value={sn}\r\n                          onClick={(e) => setClickSn()}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Form.Label>Complemento</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"Ap 1001\"\r\n                      value={complemento}\r\n                      onChange={text => setComplemento(text.target.value)}\r\n                    />\r\n                    <Form.Label>Bairro</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"Bairro das flores\"\r\n                      value={bairro}\r\n                      onChange={text => setBairro(text.target.value)}\r\n                      disabled={enderecoSetadoByCep.bairro}\r\n                    />\r\n                    <Form.Label>Cidade</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"Cidade dos Anjos\"\r\n                      value={cidade}\r\n                      onChange={text => setCidade(text.target.value)}\r\n                      disabled={enderecoSetadoByCep.cidade}\r\n                    />\r\n                    <Form.Label>Estado / UF</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"BA\"\r\n                      value={estado}\r\n                      onChange={text => setEstado(text.target.value)}\r\n                      disabled={enderecoSetadoByCep.estado}\r\n                    />\r\n                    <Form.Label>Referencia</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"Próximo à praça\"\r\n                      value={referencia}\r\n                      onChange={text => setReferencia(text.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <Form>\r\n                  <Row>\r\n                    <Col className='d-flex justify-content-center align-items-center'>\r\n                      <div key='tipoEnvio' className=\"mb-3\">\r\n                        <Form.Check\r\n                          type='radio'\r\n                          name='tipoEnvio'\r\n                          onClick={(e)=>setTipoEnvio('pac')}\r\n                          checked = {tipoEnvio === 'pac' ? true : false}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row>\r\n                        <Col>\r\n                          PAC: {freteLoading ? \r\n                            <CircularProgress />\r\n                              :\r\n                            <>\r\n                              {pac.price.toLocaleString('pt-br',{style: 'currency',currency: 'BRL'})}\r\n                            </>\r\n                          }\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <small>Entregue em {pac.deadline} dia(s).</small>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className='d-flex justify-content-center align-items-center'>\r\n                      <div key='tipoEnvio' className=\"mb-3\">\r\n                        <Form.Check\r\n                          type='radio'\r\n                          name='tipoEnvio'\r\n                          onClick={(e)=>setTipoEnvio('sedex')}\r\n                          checked = {tipoEnvio === 'sedex' ? true : false}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row>\r\n                        <Col>\r\n                          Sedex: {freteLoading ? \r\n                            <CircularProgress />\r\n                              :\r\n                            <>\r\n                              {sedex.price.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}\r\n                            </>\r\n                          }\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <small>Entregue em {sedex.deadline} dia(s).</small>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n                <hr />\r\n                <Row>\r\n                  <Col className='d-flex justify-content-center'>\r\n                    <Button\r\n                      variant='success'\r\n                      onClick={(e)=>{payment()}}\r\n                      disabled={freteLoading}\r\n                      size='lg'\r\n                    >\r\n                    Confirmar endereço e iniciar pagamento\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Footer>\r\n      </Modal>\r\n  </>);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal, Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { get_cart, set_active } from '../../store/actions/cart.action';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { style } from './style.css'; \r\nimport { remove_items, add_items } from '../../store/actions/cart.action';\r\nimport ShowPhotos from '../showPhotos';\r\nimport Endereco from './endereco';\r\nimport { index } from '../../store/actions/me.action';\r\nimport { changeNotify } from '../../store/actions/notify.action';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    overflow: 'auto',\r\n    maxHeight: '80%',\r\n    paddingTop: '34%',\r\n    paddingBottom: '1%',\r\n    marginTop: '5%'\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function Cart(props){\r\n\r\n  const items = useSelector(state => state.Items);\r\n  const me = useSelector (state => state.Me);\r\n\r\n  //TOTAL DO CARRINHO\r\n  let total = 0;\r\n  const adicionarTotal = (preco, qtd) => {\r\n    total = total + (parseFloat(preco) * parseFloat(qtd));\r\n  }\r\n\r\n  const convertTotal = (num) => {\r\n    return num.toLocaleString(\r\n      'pt-BR', { style: 'currency', currency: 'BRL' }\r\n    );\r\n  }\r\n  //!TOTAL DO CARRINHO\r\n\r\n  //CART REDUCER\r\n  const cart = useSelector(state => state.Cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const indexCall = ()=>{\r\n    dispatch( get_cart() );\r\n  };\r\n\r\n  useEffect(()=>{\r\n    indexCall();\r\n  },[]);\r\n  //!CART REDUCER\r\n\r\n  const classes = useStyles();\r\n\r\n  //Mecanismo de abertura e fechamento do carrinho\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    if (cart.ACTIVE === true) {\r\n      dispatch( set_active(false) );\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (cart.ACTIVE === true){\r\n      handleOpen();\r\n    } else if (cart.ACTIVE === false){\r\n      handleClose();\r\n    }\r\n  },[cart.ACTIVE]);\r\n\r\n  function payment(){\r\n\r\n    if (me.NAME) {\r\n\r\n      setEnderecoOpen(true);\r\n      \r\n    } else {\r\n\r\n      dispatch( changeNotify({\r\n        open: true,\r\n        class: 'error',\r\n        msg: 'Faça o login para concluir a sua compra.'\r\n      }));\r\n\r\n    }\r\n  }\r\n\r\n  //Função que verifica se o item é o último listado. Caso não seja adiciona um separador.\r\n  let indexAtual = 0;\r\n\r\n  function separador(indexTotal){\r\n    indexAtual++;\r\n    if (indexAtual < indexTotal){\r\n      return (<hr />);\r\n    }\r\n  }\r\n\r\n  const [enderecoOpen, setEnderecoOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Endereco id={me.ID} open={enderecoOpen}/>\r\n      <Modal\r\n        show={open}\r\n        onHide={handleClose}\r\n        size='xl'\r\n        className='modal-content-cart'\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h2>\r\n            Carrinho\r\n          </h2>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col>\r\n              {cart.ITEMS.map( (item) =>\r\n                <div key={item.id}>\r\n                  <Row>\r\n                    <Col className='d-flex justify-content-center'>\r\n                      {\r\n                        items.LOADING_PHOTO ?\r\n                        <CircularProgress />\r\n                          :\r\n                        <ShowPhotos id={item.id} cart='true' />\r\n                      }\r\n                    </Col>\r\n                    <Col>\r\n                      <div className='namePrice-container'>\r\n                        <div className='name-container'>\r\n                          <h4>\r\n                            {item.nome}\r\n                          </h4>\r\n                        </div>\r\n                        <Row className='name-container'>\r\n                          <Col className='pt-3'>\r\n                            <small>\r\n                              Tamanho: {item.tamanho}\r\n                            </small>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className='priceQtd-container'>\r\n                          <Col>\r\n                            <span>\r\n                              <AddIcon\r\n                              className='addButton'\r\n                              onClick={ (e) => dispatch( add_items(item.id, item.qtd, item.img, item.desc, item.preco, item.tamanho) ) }\r\n                              />\r\n                              {item.qtd}\r\n                              <RemoveIcon\r\n                                className='removeButton'\r\n                                onClick={ (e) => dispatch( remove_items(item.id, item.tamanho) ) }\r\n                              />\r\n                            </span>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <h3>\r\n                              <span className='itemPreco'>R$ {item.preco}</span>\r\n                            </h3>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  {adicionarTotal(item.preco, item.qtd)}\r\n                  {\r\n                    //Função que verifica se é o último item listado. Se não for, adiciona o separador.\r\n                    separador(cart.ITEMS.length)\r\n                  }\r\n                </div>\r\n              )}\r\n              {total === 0 && \r\n                <div className='row d-flex'>\r\n                  <div className='col-12 d-flex justify-content-center'>\r\n                    <h6>\r\n                      Carrinho vazio\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {total !== 0 &&\r\n          <Container>\r\n            <Row>\r\n              <Col className='d-flex justify-content-center align-items-center'>\r\n                <span>\r\n                  <h3>\r\n                    {convertTotal(total)}\r\n                  </h3>\r\n                </span>\r\n              </Col>\r\n              <Col className='d-flex justify-content-center'>\r\n                <span>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    size=\"lg\"\r\n                    onClick={ (e) => {payment()} }\r\n                  >\r\n                    Confirmar endereço de entrega\r\n                  </Button>\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          }\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}","import react, { useState, useEffect } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { HttpAuth } from '../../config/Http';\r\nimport { ListGroup, Table } from 'react-bootstrap';\r\n\r\nexport default function ConsultaEncomenda(props) {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [responseToken, setResponseToken] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    HttpAuth.get('/consultaEncomenda/'+props.token).then( (response)=>{\r\n\r\n      if (typeof response !== undefined || typeof response === ''){\r\n        \r\n        setResponse(response);\r\n        switch (response.data.status) {\r\n          case '1':\r\n            setResponseToken('Completo');\r\n            break;\r\n\r\n          case '2':\r\n            setResponseToken('Aprovado');\r\n            break;\r\n          \r\n          case '3':\r\n            setResponseToken('Em análise');\r\n            break;\r\n          \r\n          case '4':\r\n            setResponseToken('Devolvido');\r\n            break;\r\n\r\n          case '5':\r\n            setResponseToken('Cancelado');\r\n            break;\r\n        }\r\n        console.log(response);\r\n        setLoading(false);\r\n      }\r\n    });\r\n  },[]);\r\n\r\n  return(\r\n    <tr>\r\n      {loading ? \r\n        <CircularProgress/>\r\n          :\r\n        <>\r\n          <td>\r\n            {response.data.grossAmount}\r\n          </td>\r\n          <td>\r\n            <Table striped bordered hover>\r\n              {response.data.items !== undefined ? \r\n                response.data.items.item.map((item)=>(<>\r\n                  <tr>\r\n                    <td>\r\n                      {item.description}\r\n                    </td>\r\n                    <td>\r\n                      {item.quantity}\r\n                    </td>\r\n                    <td>\r\n                      {item.amount}\r\n                    </td>\r\n                  </tr>\r\n                </>))\r\n              :\r\n              <></>  \r\n              }\r\n            </Table>\r\n          </td>\r\n          <td>\r\n            {responseToken}\r\n          </td>\r\n        </>\r\n      }\r\n    </tr>\r\n  );\r\n}","import react, { useState, useEffect } from 'react';\r\nimport { Modal, ListGroup, Table } from 'react-bootstrap';\r\nimport { HttpAuth } from '../../config/Http';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { Axios } from 'axios';\r\nimport ConsultaEncomenda from './ConsultaEncomenda.js';\r\n\r\nexport default function Encomendas() {\r\n\r\n  //MODAL LOGIC\r\n  const [show, setShow] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //Carregamento dos pedidos\r\n  const [pedidos, setPedidos] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    HttpAuth.get('/encomenda').then( (response)=>{\r\n      if (typeof response !== undefined || typeof response === ''){\r\n        setPedidos(response.data);\r\n        \r\n        setLoading(false);\r\n      }\r\n    });\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <ListGroup.Item action onClick={handleShow}>\r\n        Meus pedidos\r\n      </ListGroup.Item>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <h2>\r\n            Encomendas\r\n          </h2>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            loading ? \r\n              <CircularProgress />\r\n                :\r\n              pedidos === \"\" || pedidos === false ?\r\n                  <>Não há pedidos</>\r\n                :\r\n                  <Table striped bordered hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <td>\r\n                          Valor\r\n                        </td>\r\n                        <td>\r\n                          Itens\r\n                        </td>\r\n                        <td>\r\n                          Status\r\n                        </td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {pedidos == '' && \r\n                        <tr>\r\n                          <td colspan='3'>\r\n                            <center>\r\n                              Não há pedidos\r\n                            </center>\r\n                          </td>\r\n                        </tr>\r\n                      }\r\n                      {pedidos.map((pedido)=>(<>\r\n                        {\r\n                          <ConsultaEncomenda \r\n                            token={pedido.transaction_code}\r\n                          />\r\n                        }\r\n                      </>))}\r\n                    </tbody>\r\n                  </Table>\r\n          }\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}","import { Link } from \"react-router-dom\";\r\nimport style from \"./style.css\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { index } from '../../store/actions/me.action';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Cart from '../cart';\r\nimport { set_active } from '../../store/actions/cart.action';\r\nimport Auth from '../auth';\r\nimport { Navbar, Nav, Popover, OverlayTrigger, Button, ListGroup } from 'react-bootstrap';\r\nimport { changeShowItems } from '../../store/actions/showItems.action';\r\nimport Encomendas from '../encomendas';\r\nimport logont from '../../public/banners/logont.png';\r\n\r\nexport default function Header() {\r\n\r\n  const me = useSelector (state => state.Me);\r\n  const cart = useSelector(state => state.Cart);\r\n  const dispatch = useDispatch();\r\n\r\n  function indexCall () {\r\n    dispatch( index() );\r\n  }\r\n\r\n  useEffect( () => {\r\n    indexCall();\r\n  }, [me.NAME]);\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  }\r\n\r\n  //Seleção de categoria de itens\r\n  const showItems = useSelector(state => state.ShowItems);\r\n\r\n  //ABERTURA E FECHAMENTO DO LOGIN\r\n  const [opened, setOpened] = useState();\r\n\r\n  //Popover do login\r\n  const popover = (\r\n    \r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">Opções</Popover.Title>\r\n        <Popover.Content>\r\n          <ListGroup>\r\n            <Encomendas />\r\n            {/*<ListGroup.Item>Mudar senha</ListGroup.Item>*/}\r\n            <ListGroup.Item action onClick={logout}>\r\n              Logout\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Popover.Content>\r\n      </Popover>\r\n  );\r\n  \r\n  const Usuario = () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\r\n      <Button className='loginButton botao'>Olá, {me.NAME}</Button>\r\n    </OverlayTrigger>\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <Cart />\r\n      <Auth opened = {opened} />\r\n\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" className='navbar'>\r\n          <Navbar.Brand className='logo'>\r\n            <img id='logoNT' src={logont}>\r\n            </img>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbar\" />\r\n          <Navbar.Collapse id=\"navbar\" className='justify-content-around'>\r\n            <Nav>\r\n              <Nav.Link href='#' onClick={(e)=>{dispatch(changeShowItems(1))}}>\r\n                Camisas Slim\r\n              </Nav.Link>\r\n              <Nav.Link href='#' onClick={(e)=>{dispatch(changeShowItems(2))}}>\r\n                Camisas regata\r\n              </Nav.Link>\r\n              <Nav.Link href='#' onClick={(e)=>{dispatch(changeShowItems(3))}}>\r\n                Calçados\r\n              </Nav.Link>\r\n              <Nav.Link href='#' onClick={(e)=>{dispatch(changeShowItems(4))}}>\r\n                Calças & Bermudas\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link href='#'>\r\n                {(me.LOADING) ?\r\n                  <div className=\"d-flex jultify-content-center\">\r\n                    <Button className='botao'>\r\n                      <CircularProgress />\r\n                    </Button>\r\n                  </div>\r\n                  :\r\n                  <>{(me.NAME) ?\r\n                      <Usuario />                  \r\n                      :\r\n                      <Button\r\n                      className='loginButton botao'\r\n                      onClick={\r\n                        (e) => { \r\n                          setOpened(true);\r\n                          setTimeout(()=>{setOpened()}, 3000);\r\n                        }\r\n                      }>\r\n                        <PersonIcon fontSize='default'/>\r\n                        Login\r\n                      </Button>\r\n                    }\r\n                  </>\r\n                }\r\n              </Nav.Link>\r\n\r\n              <Nav.Link href='#'>\r\n                <Button\r\n                  className='botao'\r\n                  onClick={(e)=>{\r\n                    dispatch( set_active(true) );\r\n                  }\r\n                }>\r\n                  <ShoppingCartIcon fontSize='default'/> Carrinho\r\n                </Button>\r\n              </Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>  \r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { style } from './style.css';\r\n\r\nexport default function ShowPhotos(props){\r\n\r\n  const items = useSelector(state => state.Items);\r\n\r\n  let carouselType = null;\r\n  if (props.cart){\r\n    carouselType = 'carousel-cart';\r\n  } else {\r\n    carouselType = 'carousel';\r\n  }\r\n  \r\n  const photos = items.PHOTO[0].filter(item => item.id === props.id).map((filtered) => <Carousel.Item\r\n    className={carouselType}\r\n    >\r\n    <img\r\n      className={\"d-block \".concat([carouselType])}\r\n      src={window.location.origin.concat([filtered.img])}\r\n      alt=\"First slide\"\r\n    />\r\n  </Carousel.Item>);\r\n\r\n  return (<>\r\n    <Carousel\r\n      className={\"carousel \".concat([carouselType])}\r\n      indicators={false}\r\n      controls={false}\r\n    >\r\n      {photos}\r\n    </Carousel>\r\n  </>)\r\n}"],"names":["Endereco","props","dispatch","useDispatch","_useState","useSelector","state","Me","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","consultaCepIsSucceful","setConsultaCepIsSucceful","_useState5","_useState6","qtdEndereco","setQtdEndereco","_useState7","rua","numero","complemento","bairro","cep","cidade","estado","referencia","_useState8","endereco","setEndereco","_useState9","_useState10","setRua","_useState11","_useState12","setNumero","_useState13","_useState14","setComplemento","_useState15","_useState16","setBairro","_useState17","_useState18","setCep","_useState19","_useState20","setCidade","_useState21","_useState22","setEstado","_useState23","_useState24","setReferencia","_useState25","_useState26","sn","setSn","_useState27","_useState28","_useState29","_useState30","cepLoading","setCepLoading","_useState31","undefined","_useState32","cepIsValid","setCepIsValid","_useState33","_useState34","cepIsInvalid","setCepIsInvalid","_useState35","_useState36","enderecoSetadoByCep","setEnderecoSetadoByCep","ruaChecked","bairroChecked","cidadeChecked","estadoChecked","_useState37","_useState38","pac","setPac","_useState39","_useState40","sedex","setSedex","_useState41","_useState42","tipoEnvio","setTipoEnvio","_useState43","_useState44","freteLoading","setFreteLoading","useEffect","consultaCep","HttpAuth","then","response","data","price","id","length","linkCep","Axios","logradouro","localidade","uf","_jsx","_Fragment","children","_jsxs","Modal","show","onHide","size","closeButton","Container","Row","Col","Form","controlId","md","type","placeholder","value","onChange","text","target","disabled","isValid","isInvalid","CircularProgress","className","href","label","onClick","e","name","checked","toLocaleString","style","currency","deadline","Button","variant","cart","localStorage","getItem","itemsIdQtd","i","JSON","parse","concat","_toConsumableArray","itemId","itemQuantity","qtd","itemTam","tamanho","tipo","removeItem","pedido","items","stringify","window","location","changeNotify","class","msg","payment","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","overflow","maxHeight","paddingTop","paddingBottom","marginTop","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Cart","Items","me","total","get_cart","handleClose","ACTIVE","set_active","indexAtual","separador","indexTotal","num","enderecoOpen","setEnderecoOpen","ID","ITEMS","map","item","LOADING_PHOTO","ShowPhotos","nome","AddIcon","add_items","img","desc","preco","RemoveIcon","remove_items","parseFloat","NAME","ConsultaEncomenda","loading","setLoading","responseToken","setResponseToken","setResponse","token","status","console","log","grossAmount","Table","striped","bordered","hover","description","quantity","amount","Encomendas","setShow","pedidos","setPedidos","ListGroup","action","colspan","transaction_code","Header","index","ShowItems","opened","setOpened","popover","Popover","as","clear","reload","Usuario","OverlayTrigger","trigger","placement","overlay","Auth","Navbar","bg","expand","src","logont","Nav","changeShowItems","LOADING","setTimeout","PersonIcon","fontSize","ShoppingCartIcon","carouselType","photos","PHOTO","filter","filtered","Carousel","origin","alt","indicators","controls"],"sourceRoot":""}